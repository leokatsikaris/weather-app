{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leone\\\\Desktop\\\\weather-app\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Nav from './components/Nav';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction onSearch(ciudad) {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=5bb68976e3a596b8fcd7286589d12add&units=metric`).then(r => r.json()).then(recurso => {\n    if (recurso.main !== undefined) {\n      const ciudad = {\n        min: Math.round(recurso.main.temp_min),\n        max: Math.round(recurso.main.temp_max),\n        img: recurso.weather[0].icon,\n        id: recurso.id,\n        wind: recurso.wind.speed,\n        temp: recurso.main.temp,\n        name: recurso.name,\n        weather: recurso.weather[0].main,\n        clouds: recurso.clouds.all,\n        latitud: recurso.coord.lat,\n        longitud: recurso.coord.lon\n      };\n      setCities(oldCities => [...oldCities, ciudad]);\n    } else {\n      alert(\"City not found\");\n    }\n  });\n}\n\n_s(onSearch, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: [/*#__PURE__*/_jsxDEV(Nav, {\n    onSearch: onSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 32\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 58\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/leone/Desktop/weather-app/src/index.js"],"names":["React","useState","ReactDOM","App","Nav","serviceWorker","BrowserRouter","onSearch","ciudad","cities","setCities","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAU,EAAAA,KAAK,CAAE,qDAAoDH,MAAO,sDAA7D,CAAL,CACGI,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAESG,OAAD,IAAa;AACjB,QAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;AAC5B,YAAMT,MAAM,GAAG;AACbU,QAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;AAEbC,QAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;AAGbC,QAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbC,QAAAA,EAAE,EAAEZ,OAAO,CAACY,EAJC;AAKbC,QAAAA,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;AAMbC,QAAAA,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;AAObC,QAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAPD;AAQbN,QAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;AASbgB,QAAAA,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;AAUbC,QAAAA,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;AAWbC,QAAAA,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;AAXX,OAAf;AAaA5B,MAAAA,SAAS,CAAC6B,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe/B,MAAf,CAAd,CAAT;AACD,KAfD,MAeO;AACLgC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,GArBH;AAsBC;;GAzBIjC,Q;;AA2BTL,QAAQ,CAACuC,MAAT,eAAgB,QAAC,aAAD;AAAA,0BAAe,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAElC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAf,eAAyC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAkFmC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlF,E,CAEA;AACA;AACA;;AACAtC,aAAa,CAACuC,UAAd","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Nav from './components/Nav';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction onSearch(ciudad) {\r\n    const [cities, setCities] = useState([]);\r\n    \r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=5bb68976e3a596b8fcd7286589d12add&units=metric`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"City not found\");\r\n        }\r\n      });\r\n    }\r\n\r\nReactDOM.render(<BrowserRouter><Nav onSearch={onSearch}/><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}